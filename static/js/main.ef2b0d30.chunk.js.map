{"version":3,"sources":["assets/me.png","components/Navbar.js","components/Intro.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","useEffect","mainNav","document","getElementById","addEventListener","classList","toggle","$","find","click","e","preventDefault","section","this","attr","animate","scrollTop","offset","top","className","id","class","href","Intro","styles","title","fontSize","fontFamily","desc","marginTop","fontStyle","fontWeight","name","backgroundColor","margin","padding","borderRadius","style","About","container","width","height","boxShadow","border","image","flex","src","require","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oKAAAA,EAAOC,QAAU,IAA0B,gC,qGC6E5BC,MA1Ef,SAAgBC,GA+Bd,OA9BAC,qBAAU,WACR,IAAIC,EAAUC,SAASC,eAAe,WACnBD,SAASC,eAAe,oBAE9BC,iBAAiB,SAAS,WACrCH,EAAQI,UAAUC,OAAO,aAG3BC,IAAE,MACCC,KAAK,KACLC,OAAM,SAASC,GACdA,EAAEC,iBACF,IAAIC,EAAUL,IAAEM,MAAMC,KAAK,QAC3BP,IAAE,cAAcQ,QAAQ,CACtBC,UAAWT,IAAEK,GAASK,SAASC,IAAM,KAEvCjB,EAAQI,UAAUC,OAAO,aAE7BC,IAAE,QACCC,KAAK,KACLC,OAAM,SAASC,GACdA,EAAEC,iBACF,IAAIC,EAAUL,IAAEM,MAAMC,KAAK,QAC3BP,IAAE,cAAcQ,QAAQ,CACtBC,UAAWT,IAAEK,GAASK,SAASC,IAAM,KAEvCjB,EAAQI,UAAUC,OAAO,gBAK7B,6BACE,yBAAKa,UAAU,SAASC,GAAG,UACzB,0BAAMD,UAAU,gBAAgBC,GAAG,oBACjC,uBAAGC,MAAM,gBAEX,8BACE,uBAAGC,KAAK,SAASH,UAAU,QAA3B,cAIF,wBAAIA,UAAU,WAAWC,GAAG,WAC1B,4BACE,uBAAGE,KAAK,SAASH,UAAU,aAA3B,UAIF,4BACE,uBAAGG,KAAK,YAAYH,UAAU,aAA9B,aAIF,4BACE,uBAAGG,KAAK,YAAYH,UAAU,aAA9B,aAIF,4BACE,uBAAGG,KAAK,cAAcH,UAAU,aAAhC,eAIF,4BACE,uBAAGG,KAAK,WAAWH,UAAU,aAA7B,gBClCGI,MA/Bf,SAAexB,GACb,IAAMyB,EAAS,CACbC,MAAO,CACLC,SAAU,OACVC,WAAY,sBAEdC,KAAM,CACJF,SAAU,OACVG,UAAW,OACXF,WAAY,8BACZG,UAAW,SACXC,WAAY,QAEdC,KAAM,CACJC,gBAAiB,UACjBC,OAAQ,QACRC,QAAS,gBACTC,aAAc,SAIlB,OACE,6BACE,wBAAIC,MAAOb,EAAOC,OAAlB,WACU,0BAAMY,MAAOb,EAAOQ,MAApB,UAEV,uBAAGK,MAAOb,EAAOI,MAAjB,8BCMSU,MAhCf,SAAevC,GACb,IAAMyB,EAAS,CACbe,UAAW,CACTC,MAAO,MACPC,OAAQ,MACRR,gBAAiB,UACjBG,aAAc,OACdM,UAAW,WACXC,OAAQ,kBAEVC,MAAO,CACLC,KAAM,IACNJ,OAAQ,QACRD,MAAO,QACPJ,aAAc,MACdF,OAAQ,QAEVN,KAAM,IAKR,OACE,yBAAKS,MAAOb,EAAOe,WACjB,yBAAKO,IAAKC,EAAQ,IAAqBC,IAAI,QAAQX,MAAOb,EAAOoB,QACjE,yBAAKP,MAAOb,EAAOI,MAAnB,sDCOSqB,MA5Bf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,yBAAK9B,UAAU,WACb,yBAAKA,UAAU,YAAYC,GAAG,SAC5B,kBAAC,EAAD,OAEF,yBAAKD,UAAU,YAAYC,GAAG,SAC5B,kBAAC,EAAD,OAEF,yBAAKD,UAAU,YAAYC,GAAG,YAC5B,wCAEF,yBAAKD,UAAU,YAAYC,GAAG,YAC5B,wCAEF,yBAAKD,UAAU,YAAYC,GAAG,cAC5B,0CAEF,yBAAKD,UAAU,YAAYC,GAAG,WAC5B,0CCfU8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAStD,SAASC,eAAe,SD6H3C,kBAAmBsD,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ef2b0d30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.9f24ac4e.png\";","import React, { useEffect } from \"react\";\nimport $ from \"jquery\";\n\nfunction Navbar(props) {\n  useEffect(() => {\n    let mainNav = document.getElementById(\"js-menu\");\n    let navBarToggle = document.getElementById(\"js-navbar-toggle\");\n\n    navBarToggle.addEventListener(\"click\", function() {\n      mainNav.classList.toggle(\"active\");\n    });\n\n    $(\"ul\")\n      .find(\"a\")\n      .click(function(e) {\n        e.preventDefault();\n        var section = $(this).attr(\"href\");\n        $(\"html, body\").animate({\n          scrollTop: $(section).offset().top - 49\n        });\n        mainNav.classList.toggle(\"active\");\n      });\n    $(\"span\")\n      .find(\"a\")\n      .click(function(e) {\n        e.preventDefault();\n        var section = $(this).attr(\"href\");\n        $(\"html, body\").animate({\n          scrollTop: $(section).offset().top - 49\n        });\n        mainNav.classList.toggle(\"active\");\n      });\n  });\n\n  return (\n    <div>\n      <nav className=\"navbar\" id=\"navbar\">\n        <span className=\"navbar-toggle\" id=\"js-navbar-toggle\">\n          <i class=\"fa fa-bars\"></i>\n        </span>\n        <span>\n          <a href=\"#intro\" className=\"logo\">\n            Derek Jou\n          </a>\n        </span>\n        <ul className=\"main-nav\" id=\"js-menu\">\n          <li>\n            <a href=\"#about\" className=\"nav-links\">\n              About\n            </a>\n          </li>\n          <li>\n            <a href=\"#products\" className=\"nav-links\">\n              Products\n            </a>\n          </li>\n          <li>\n            <a href=\"#projects\" className=\"nav-links\">\n              Projects\n            </a>\n          </li>\n          <li>\n            <a href=\"#experience\" className=\"nav-links\">\n              Experience\n            </a>\n          </li>\n          <li>\n            <a href=\"#contact\" className=\"nav-links\">\n              Contact\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nfunction Intro(props) {\n  const styles = {\n    title: {\n      fontSize: \"90px\",\n      fontFamily: \"Roboto Slab, serif\"\n    },\n    desc: {\n      fontSize: \"25px\",\n      marginTop: \"20px\",\n      fontFamily: \"Source Sans Pro, sans-serif\",\n      fontStyle: \"italic\",\n      fontWeight: \"bold\"\n    },\n    name: {\n      backgroundColor: \"#001f3f\",\n      margin: \"-20px\",\n      padding: \"0 20px 0 20px\",\n      borderRadius: \"25px\"\n    }\n  };\n\n  return (\n    <div>\n      <h1 style={styles.title}>\n        Hi, I'm <span style={styles.name}>Derek</span>\n      </h1>\n      <p style={styles.desc}>Full-Stack Web Developer</p>\n    </div>\n  );\n}\n\nexport default Intro;\n","import React from \"react\";\n\nfunction About(props) {\n  const styles = {\n    container: {\n      width: \"75%\",\n      height: \"75%\",\n      backgroundColor: \"#EEEEEE\",\n      borderRadius: \"25px\",\n      boxShadow: \"5px 10px\",\n      border: \"2px solid gray\"\n    },\n    image: {\n      flex: \"1\",\n      height: \"150px\",\n      width: \"150px\",\n      borderRadius: \"50%\",\n      margin: \"10px\"\n    },\n    desc: {\n\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <img src={require(\"../assets/me.png\")} alt=\"Derek\" style={styles.image} />\n      <div style={styles.desc}>\n        Hello, my name is Derek and this is my page hehe\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Intro from \"./components/Intro\";\nimport About from \"./components/About\";\n\nfunction App() {\n  return (\n    <div>\n      <Navbar></Navbar>\n      <div className=\"wrapper\">\n        <div className=\"container\" id=\"intro\">\n          <Intro></Intro>\n        </div>\n        <div className=\"container\" id=\"about\">\n          <About></About>\n        </div>\n        <div className=\"container\" id=\"products\">\n          <p>Products</p>\n        </div>\n        <div className=\"container\" id=\"projects\">\n          <p>Projects</p>\n        </div>\n        <div className=\"container\" id=\"experience\">\n          <p>Experience</p>\n        </div>\n        <div className=\"container\" id=\"contact\">\n          <p>Contact</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}